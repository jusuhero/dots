font_family MesloLGS NF 
bold_font auto
italic_font      auto
bold_italic_font auto

font_size 10.0
adjust_line_height 3
# adjust_column_width 0

cursor white

#: Default cursor color

cursor_shape beam

#: The cursor shape can be one of (block, beam, underline)

cursor_blink_interval      0
# cursor_stop_blinking_after 15.0

enable_audio_bell no

window_alert_on_bell no

#: Request window attention on bell. Makes the dock icon bounce on
#: macOS or the taskbar flash on linux.

bell_on_tab no

enabled_layouts Tall:bias=65, Fat:bias=65, Stack, Grid, Horizontal, Vertical

window_border_width 1

window_margin_width 4

window_padding_width 6

active_border_color #666666  

inactive_border_color #333333  

inactive_text_alpha .8

tab_bar_margin_width 4

tab_bar_style fade

tab_fade 1 1 1

active_tab_foreground   #282828
active_tab_background   #bbbbbb
active_tab_font_style   bold
inactive_tab_foreground #eeeeee
inactive_tab_background #282828
inactive_tab_font_style normal

remember_window_size no
#initial_window_width 460
#initial_window_height 366
#initial_window_height 326
#initial_window_width 384

#xdotool getwindowfocus getwindowgeometry

#: }}}

#: Advanced {{{

# shell zsh

#: The shell program to execute. The default value of . means to use
#: whatever shell is set as the default shell for the current user.
#: Note that on macOS if you change this, you might need to add
#: --login to ensure that the shell starts in interactive mode and
#: reads its startup rc files.

editor vim

#: The console editor to use when editing the kitty config file or
#: similar tasks. A value of . means to use the environment variable
#: EDITOR. Note that this environment variable has to be set not just
#: in your shell startup scripts but system-wide, otherwise kitty will
#: not see it.

# close_on_child_death nvim

#: Close the window when the child process (shell) exits. If no (the
#: default), the terminal will remain open when the child exits as
#: long as there are still processes outputting to the terminal (for
#: example disowned or backgrounded processes). If yes, the window
#: will close as soon as the child process exits. Note that setting it
#: to yes means that any background processes still using the terminal
#: can fail silently because their stdout/stderr/stdin no longer work.

allow_remote_control yes

#: Allow other programs to control kitty. If you turn this on other
#: programs can control all aspects of kitty, including sending text
#: to kitty windows, opening new windows, closing windows, reading the
#: content of windows, etc. Note that this even works over ssh
#: connections.

# startup_session none

#: Path to a session file to use for all kitty instances. Can be
#: overridden by using the kitty --session command line option for
#: individual instances. See sessions in the kitty documentation for
#: details. Note that relative paths are interpreted with respect to
#: the kitty config directory. Environment variables in the path are
#: expanded.

# clipboard_control write-clipboard write-primary

#: Allow programs running in kitty to read and write from the
#: clipboard. You can control exactly which actions are allowed. The
#: set of possible actions is: write-clipboard read-clipboard write-
#: primary read-primary The default is to allow writing to the
#: clipboard and primary selection. Note that enabling the read
#: functionality is a security risk as it means that any program, even
#: one running on a remote server via SSH can read your clipboard.

url_color #FF0000
url_style simple


# term xterm-kitty

#: The value of the TERM environment variable to set. Changing this
#: can break many terminal programs, only change it if you know what
#: you are doing, not because you read some advice on Stack Overflow
#: to change it.

#: }}}


#: Font sizes {{{

#: You can change the font size for all top-level kitty windows at a
#: time or only the current one.

map ctrl+equal change_font_size current +2.0
map ctrl+) change_font_size current -2.0

map kitty_mod+equal     change_font_size all +2.0
map kitty_mod+)     change_font_size all -2.0
map kitty_mod+backspace change_font_size all 0

#: To setup shortcuts for specific font sizes::

#:     map kitty_mod+f6 change_font_size all 10.0

#: To setup shortcuts to change only the current window's font size::

#:     map kitty_mod+f6 change_font_size current 10.0
#: }}}

map kitty_mod+enter new_window_with_cwd

map alt+right neighboring_window right
map alt+left neighboring_window left
map alt+up neighboring_window up
map alt+down neighboring_window down

map shift+up move_window up
map shift+left move_window left
map shift+right move_window right
map shift+down move_window down

map ctrl+alt+left resize_window narrower
map ctrl+alt+right resize_window wider
map ctrl+alt+up resize_window taller
map ctrl+alt+down resize_window shorter 

map kitty_mod+t new_tab_with_cwd


#: Miscellaneous {{{


# map kitty_mod+f11    toggle_fullscreen
# map kitty_mod+u      input_unicode_character
# map kitty_mod+f2     edit_config_file
# map kitty_mod+escape kitty_shell window

#: Open the kitty shell in a new window/tab/overlay/os_window to
#: control kitty using commands.

# map kitty_mod+a>m set_background_opacity +0.1
# map kitty_mod+a>l set_background_opacity -0.1
# map kitty_mod+a>1 set_background_opacity 1
# map kitty_mod+a>d set_background_opacity default

#: You can tell kitty to send arbitrary (UTF-8) encoded text to the
#: client program when pressing specified shortcut keys. For example::

#:     map ctrl+alt+a send_text all Special text

#: This will send "Special text" when you press the ctrl+alt+a key
#: combination.  The text to be sent is a python string literal so you
#: can use escapes like \x1b to send control codes or \u21fb to send
#: unicode characters (or you can just input the unicode characters
#: directly as UTF-8 text). The first argument to send_text is the
#: keyboard modes in which to activate the shortcut. The possible
#: values are normal or application or kitty or a comma separated
#: combination of them.  The special keyword all means all modes. The
#: modes normal and application refer to the DECCKM cursor key mode
#: for terminals, and kitty refers to the special kitty extended
#: keyboard protocol.

#: Another example, that outputs a word and then moves the cursor to
#: the start of the line (same as pressing the Home key)::

#:     map ctrl+alt+a send_text normal Word\x1b[H
#:     map ctrl+alt+a send_text application Word\x1bOH

map ctrl+space send_text all \x10

background_opacity 0.95

# colors
foreground #EA8532
background #291D2D
 
color0 #000000
color8 #000000
color1 #EC2323
color9 #EC2323
color2 #EA8232
color10 #EA8232
color3 #F99D53
color11 #F99D53
color4 #EC2323
color12 #EC2323
 
color5 #43A047
color13 #43A047
 
color6 #EC2323
color14 #EC2323
 
color7 #FBE5E5
color15 #FBE5E5
